{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kachwaluttamsharma/Desktop/Development Workspace/next/Course-Project/pages/[meetupId]/index.js\";\nimport React, { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Pune.jpg/640px-Pune.jpg\",\n    title: \"A First Meet Up\",\n    address: \"Some Street, Some City\",\n    description: \"The Meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://KachwalUttam:Jan18jyo@cluster0.l6aqh.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Pune.jpg/640px-Pune.jpg\",\n        id: \"m1\",\n        title: \"A First Meet Up\",\n        address: \"Some Street, Some City\",\n        description: \"The Meetup description\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/kachwaluttamsharma/Desktop/Development Workspace/next/Course-Project/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetail","MongoClient","MeetupDetails","props","getStaticPaths","context","meetupId","params","client","connect","db","meetupsCollection","collection","selectedMeetup","findOne","_id","close","fallback","paths","meetups","map","meetup","toString","getStaticProps","console","log","meetupData","image","id","title","address","description"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,mFADR;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,OAAO,EAAC,wBAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC;AACA,QAAME,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,oGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,cAAc,GAAGF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,IAAAA,GAAG,EAAET;AAAP,GAA1B,CAAvB;AACAE,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAaC,MAAD,KAAa;AAC9Bd,MAAAA,MAAM,EAAE;AAAED,QAAAA,QAAQ,EAAEe,MAAM,CAACN,GAAP,CAAWO,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,SAASC,cAAT,CAAwBlB,OAAxB,EAAiC;AACtC;AACA,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAZ;AACA,SAAO;AACLH,IAAAA,KAAK,EAAE;AACLuB,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,mFAFQ;AAGVC,QAAAA,EAAE,EAAE,IAHM;AAIVC,QAAAA,KAAK,EAAE,iBAJG;AAKVC,QAAAA,OAAO,EAAE,wBALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAe7B,aAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return (\n    <MeetupDetail\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Pune.jpg/640px-Pune.jpg\"\n      title=\"A First Meet Up\"\n      address=\"Some Street, Some City\"\n      description=\"The Meetup description\"\n    />\n  );\n}\n\nexport async function getStaticPaths(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://KachwalUttam:Jan18jyo@cluster0.l6aqh.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = meetupsCollection.findOne({ _id: meetupId });\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Pune.jpg/640px-Pune.jpg\",\n        id: \"m1\",\n        title: \"A First Meet Up\",\n        address: \"Some Street, Some City\",\n        description: \"The Meetup description\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}